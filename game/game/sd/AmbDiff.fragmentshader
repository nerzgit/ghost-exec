#version 330 core

in vec2 UV;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 LightDirection_cameraspace;

out vec3 color;

uniform sampler2D myTextureSampler;
uniform vec3 LightPosition_worldspace;
uniform vec3 FlashPosition_worldspace;

void main(){

	vec3 LightColor = vec3(1.0,0.98,0.94);
	
	vec3 DiffuseColor  = texture( myTextureSampler, UV ).rgb;
	vec3 AmbientColor  = vec3(0.05,0.05,0.05) * DiffuseColor;

	float distance = length( LightPosition_worldspace - Position_worldspace );

	vec3 n = normalize( Normal_cameraspace );
	vec3 l = normalize( LightDirection_cameraspace );
	float cosTheta = clamp( dot( n,l ), 0.0,1.0 );

	vec3  FlashColor = vec3(1.0,0.7,0.0);
	float FlashDist  = length( FlashPosition_worldspace - Position_worldspace );
	
	color = 
		AmbientColor  +
		DiffuseColor  * LightColor * 20.0 * cosTheta / (distance*distance) +
		FlashColor    * LightColor * 10.0 * cosTheta / (FlashDist*FlashDist);

}